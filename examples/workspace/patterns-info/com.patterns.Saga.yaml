doc: |-
  ### Saga
  Суть паттерна заключается в организации транзакций, при этом придерживаясь концепции микросервисов.

  #### Проблема
  У нас есть много отдельных сервисов, каждый из которых ответственен за часть функциональности.
  Однако, в некоторых случаях требуется реализовать цепочку вызовов, затрагивающую несколько сервисов,
  при этом обеспечив согласованность - если на каком-то этапе произошла ошибка,
  то система должна вернуться к состоянию, в котором она была до выполнения транзакции.

  #### Решение
  Паттерн описывает вариацию Orchestration-based saga.
  При таком подходе мы добавляем еще один сервис, отвечающий за транзакцию.
  Его называют saga оркестратором.

  Его работа заключается в отправке команд другим сервисам в определенном порядке и
  отправке обратных команд при возникновении ошибки. Вариант более приоритетный,
  так как нет мешанины, нет размазывания логики, все находится в отдельном сервисе.
